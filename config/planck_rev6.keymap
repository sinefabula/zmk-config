/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/* Uncomment this block if using an encoder */
//&encoder {
//    status = "okay";
//};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behaviors-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behaviors-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47>;
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &trans &kp Q        &kp W        &kp E       &kp R       &kp T  &kp Y   &kp U       &kp I       &kp O        &kp P          &trans
                &trans &hml LSHFT A &hml LCTRL S &hml LALT D &hml LGUI F &kp G  &kp H   &hmr RGUI J &hmr RALT K &hmr RCTRL L &hmr RSHFT SEMI &trans
                &trans &lt 2 Z      &kp X        &kp C       &kp V       &kp B  &kp N   &kp M       &kp COMMA   &kp DOT      &kp SLASH      &trans
                &trans &trans       &trans       &mo 1       &kp bspc    &trans &trans  &kp SPACE   &mo 1       &trans       &trans         &trans
            >;
        };

        sym {
            bindings = <
                &trans &kp EXCL         &kp AT    &kp HASH &kp DLLR &kp PRCNT &kp AMPS  &kp STAR        &kp LPAR       &kp RPAR        &kp BSLH        &trans
                &trans &hml LSHFT TILDE &kp LCTRL &kp LALT &kp LGUI &kp CARET &kp EQUAL &hmr RGUI MINUS &hmr RALT LBKT &hmr RCTRL RBKT &hmr RSHFT APOS &trans
                &trans &mo 3            &trans    &trans   &trans   &kp GRAVE &kp PLUS  &kp UNDER       &kp LBRC       &kp RBRC        &kp PIPE        &trans
                &trans &trans           &trans    &mo 4    &trans   &trans    &trans    &kp CAPS        &mo 4          &trans          &trans          &trans
            >;
        };

        num {
            bindings = <
                &trans &trans &kp HOME  &kp UP   &kp END   &trans &trans &kp N7       &kp N8       &kp N9        &trans          &trans 
                &trans &trans &kp LEFT  &kp DOWN &kp RIGHT &trans &trans &hmr RGUI N4 &hmr RALT N5 &hmr RCTRL N6 &hmr RSHFT PLUS &trans 
                &trans &trans &kp PG_UP &trans   &kp PG_DN &trans &trans &kp N1       &kp N2       &kp N3        &trans          &trans 
                &trans &trans &trans    &mo 3    &trans    &trans &trans &trans       &kp N0       &trans        &trans          &trans 
            >;
        };

        mouse {
            bindings = <
                &trans &kp ESC   &trans    &trans   &kp RET  &trans   &trans          &trans         &mmv MOVE_UP   &trans          &trans &trans
                &trans &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &mkp MB3 &trans          &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans &trans
                &trans &trans    &trans    &trans   &trans   &trans   &msc SCRL_RIGHT &msc SCRL_UP   &msc SCRL_DOWN &msc SCRL_LEFT  &trans &trans
                &trans &trans    &trans    &trans   &trans   &trans   &trans          &mkp MB1       &mkp MB2       &trans          &trans &trans
            >;
        };

        func {
            bindings = <
                &trans &bootloader &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &trans &kp F12 &kp F7 &kp F8 &kp F8 &rgb_ug RGB_HUI &trans 
                &trans &kp LSHFT   &kp LCTRL  &kp LALT     &kp LGUI     &trans &kp F11 &kp F4 &kp F5 &kp F6 &rgb_ug RGB_HUD &trans 
                &trans &trans      &kp C_PREV &kp C_PP     &kp C_NEXT   &trans &kp F10 &kp F1 &kp F2 &kp F3 &trans          &trans 
                &trans &trans      &trans     &trans       &trans       &trans &trans  &trans &trans &trans &trans          &trans 
            >;
        };
    };
};
